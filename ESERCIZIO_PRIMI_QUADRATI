#include <iostream>
#include <cmath>
#include <iomanip>
#include <fstream>

#include "lib.h"

using namespace std;

int main () {

    int n_dati;
    int* v_int = NULL;
    bool* v_prime = NULL;
    bool* v_square = NULL;

    v_int = new int [n_dati];
    v_prime = new bool [n_dati];
    v_square = new bool [n_dati];

    n_dati = charge (v_int, (char*) "interi.dat" );

    for (int i=0; i<n_dati; i++) {
        v_square[i] = false;
        v_prime[i] = false;
    }

    for (int h=0; h<n_dati; h++) {

        v_square[h] = square ( v_int[h] );
        v_prime[h] = prime( v_int[h] );

    }

    del (v_square, v_prime, v_int, n_dati);

    print (v_square, v_prime, v_int, n_dati);



    delete []v_square;
    delete []v_prime;
    delete []v_int;

    return 0; }






LIBRERI.CPP

#include <iostream>
#include <cmath>
#include <iomanip>
#include <fstream>

using namespace std;

void print (bool* v_square, bool* v_prime, int* v_int, int n_dati) {

int i=0; 

ofstream file_out;

file_out.open("Risultati.dat");

if (file_out.fail()) cout << "ERRORE APERTURA FILE IN USCITA" << endl;

file_out << "I valori sopravvissuti sono: " << endl;
while (v_square[i] == true or v_prime[i] == true) {

    file_out << "\t" << v_int[i];

    if (v_square[i] == true) file_out << "\t quadrato perfetto"  << endl;

    if (v_prime[i] == true) file_out << "\t numero primo" << endl;

    i++;
}



file_out.close();
    
}


int charge (int* v_int, char* nome_file) {

    int h=0;

    ifstream file_in;

    file_in.open(nome_file);

    if (file_in.fail()) cout << "ERRORE APERTURA IN INGRESSO DEL FILE!!" << endl;

    

    while( !file_in.eof() ) {
        file_in >> v_int[h];
        h++;

    }

    file_in.close();

    return h;
}


bool square (int n) {

    float a = sqrt(n);

    if (pow(a,2) == n) return true;
    else return false;
}


bool prime (int n) {

    for (int i=2; i<n; i++) if (n%i == 0) return false;
    
    return true;
}


void del (bool* v_square, bool* v_prime, int* v_int, int n) {

     for(int i=0; i<n; i++) {

    int t;
    bool t_s, t_p;

        if ( (v_square[i] == false) or (v_prime[i] == false) ) {

           int k = i;
           while( ((v_square[k] == false) and (v_prime[k] == false)) and k<(n-1) ) k++;

            t = v_int[i];
            v_int[i] = v_int[k];
            v_int[k] = t;

            t_s = v_square[i];
            v_square[i] = v_square[k];
            v_square[k] = t_s;

            t_p = v_prime[i];
            v_prime[i] = v_prime[k];
            v_prime[k] = t_p;          

        }

            
            } 

        }

LIBRERIA.h

int charge (int*, char* );
bool square (int);
bool prime (int);
void del (bool*, bool*, int*, int );
void print (bool*, bool*, int*, int);
